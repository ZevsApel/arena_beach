generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows", "linux-musl-openssl-3.0.x"]
  engineType    = "library"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  name          String?
  password      String
  role          String         @default("admin")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  loginAttempts LoginAttempt[]

  @@index([email])
}

model LoginAttempt {
  id          Int      @id @default(autoincrement())
  adminId     Int
  attempts    Int      @default(0)
  lastAttempt DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  admin       Admin    @relation(fields: [adminId], references: [id])

  @@index([adminId])
}

model Room {
  id          Int           @id @default(autoincrement())
  title       String
  slug        String        @unique
  summary     String?
  description String?
  price       Float
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  features    RoomFeature[]
  images      RoomImage[]
}

model RoomFeature {
  id     Int    @id @default(autoincrement())
  icon   String
  label  String
  roomId Int
  room   Room   @relation(fields: [roomId], references: [id])

  @@index([roomId], map: "RoomFeature_roomId_fkey")
}

model RoomImage {
  id     Int    @id @default(autoincrement())
  path   String
  roomId Int
  room   Room   @relation(fields: [roomId], references: [id])

  @@index([roomId], map: "RoomImage_roomId_fkey")
}
